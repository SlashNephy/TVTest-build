name: TVTest

on:
  push:
    paths:
      - .github/workflows/TVTest.yml

  workflow_dispatch:

jobs:
  build-TVTest:
    runs-on: windows-2022

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x64
            cpu: AVX
            cpu_property: AdvancedVectorExtensions
          - platform: x64
            cpu: AVX2
            cpu_property: AdvancedVectorExtensions2
          - platform: x64
            cpu: AVX512
            cpu_property: AdvancedVectorExtensions512
          # Win32

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: DBCTRADO/TVTest
          submodules: recursive

      - name: Update Submodules
        shell: powershell
        run: |
          git submodule update --recursive --remote

          $path = "src\LibISDB\Thirdparty\fdk-aac\libSBRdec\src\sbr_crc.cpp"
          if (!(Test-Path $path)) {
              New-Item $path
          }
      
      - name: Enable Enhanced Instruction Set
        shell: powershell
        run: |
          $data = Get-Content src/TVTest.vcxproj | % { $_ -replace '<EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>','<EnableEnhancedInstructionSet>${{ matrix.cpu_property }}</EnableEnhancedInstructionSet>' }
          $data | Out-File src/TVTest.vcxproj

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup Windows SDK 17763
        uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 17763

      - name: MSBuild (LibISDB.sln)
        working-directory: src\LibISDB\Projects
        run: msbuild LibISDB.sln /p:Configuration="Release_MD" /p:Platform="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: MSBuild (TVTest_All.sln)
        working-directory: src
        run: msbuild TVTest_All.sln /p:Configuration="Release_MD" /p:Platform="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: MSBuild (Samples.sln)
        working-directory: sdk/Samples
        run: msbuild Samples.sln /p:Configuration="Release" /p:Platform="${{ matrix.platform }}" -m /p:PlatformToolset=v143

      - name: Prepare Artifacts
        shell: powershell
        run: |
          New-Item -Path Artifacts -ItemType Directory
          Copy-Item -Path src/${{ matrix.platform }}/Release_MD/TVTest.exe -Destination Artifacts/
          Copy-Item -Path src/${{ matrix.platform }}/Release_MD/TVTest_Image.dll -Destination Artifacts/
          Copy-Item -Path sdk/Samples/${{ matrix.platform }}/Release -Filter *.tvtp -Destination Artifacts/Plugins/ -Recurse
          Copy-Item -Path sdk/Samples/${{ matrix.platform }}/Release -Filter *.dll -Destination Artifacts/Plugins/ -Recurse

      - name: Prepare Assets (x64)
        if: matrix.platform == 'x64'
        shell: powershell
        run: Get-ChildItem -Path data/Data_x64 | Move-Item -Destination data/ -Force
      - name: Prepare Assets
        shell: powershell
        run: Copy-Item -Path data/* -Destination Artifacts/ -Recurse

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: TVTest_${{ matrix.platform }}_${{ matrix.cpu }}
          if-no-files-found: error
          path: Artifacts/

      - name: Create Release
        shell: powershell
        if: startsWith(github.ref, 'refs/tags/')
        run: Compress-Archive -Path Artifacts/* -DestinationPath TVTest_${{ matrix.platform }}_${{ matrix.cpu }}.zip

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: TVTest_${{ matrix.platform }}_${{ matrix.cpu }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
